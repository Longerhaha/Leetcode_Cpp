class Solution {
public:
    int surfaceArea(vector<vector<int>>& grid) {
        int total_num = 0;
        int cover = 0;
        for( int i = 0; i < grid.size(); i++ ){
            for( int j = 0; j < grid[i].size(); j++ ){
                total_num += grid[i][j];
                cover += grid[i][j] > 0 ? (grid[i][j] - 1)*2 : 0;
                if(i + 1 < grid.size()){
                    cover += std::min(grid[i][j], grid[i + 1][j]) * 2;
                }
                if(j + 1 < grid[i].size()){
                    cover += std::min(grid[i][j], grid[i][j + 1]) * 2;
                }
            }
        }
        return 6 * total_num - cover;
    }
};