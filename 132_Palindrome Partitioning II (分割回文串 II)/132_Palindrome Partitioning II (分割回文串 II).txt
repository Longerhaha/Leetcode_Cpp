class Solution {
public:
    int minCut(string s) {
        if(s.size() == 0)
            return 0;
        //nums[i]记录当前子串s[0]..s[i]所需要的最小分割次数
        int len = s.size();
        vector<int> nums(len + 1, 0);
        //初始化最小分割次数
        for( int i = 0; i <= len; i++ )
            nums[i] = i - 1;
        
        for( int i = 1; i <= len; i++ ){
            //当做中心往外扩张
            for( int j = 0; j < i && i + j <= len && s[i-j-1] == s[i+j-1]; j++){
                nums[i + j]=min(nums[i + j],nums[i - j - 1] + 1);
            }
            //和右边当做中心往外扩张
            for(int j = 0; i - j > 0 && i + j + 1 <= len && s[i - 1] == s[i] && s[i - j - 1] == s[i + j]; j++ ){
                nums[i + j + 1] = min(nums[i + j + 1], nums[i - j - 1] + 1);
            }
        }
        return nums[len];
    }
};